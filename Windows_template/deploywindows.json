{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "VMtest",
            "metadata": {
                "description": "The name of the virtual machine."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "The size of the virtual machine."
            }
        },
        "osversion": {
            "type": "string",
            "defaultValue": "2019",
            "metadata": {
                "description": "Version of Windows to deploy: 2012, 2016, 2019"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "AzureUser",
            "metadata": {
                "description": "The admin username for the virtual machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for the virtual machine."
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The OS disk Storage Type ."
            }
        },
        "deployPublicIpAddress": {
            "type": "string",
            "defaultValue": "False",
            "allowedValues": [
                "True",
                "False"
            ],
            "metadata": {
                "description": "Deploy public ip address for virtual machine."
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "test-sandbox",

            "metadata": {
                "description": "The Name of the resource group for network resources."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "test-sandbox-vnet",
            "metadata": {
                "description": "The name of the virtual network."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "The name of the subnet in the virtual network."
            }
        },
        "atosmananged": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Specify if the VM is Atos Mananged: true or false"
            }
        },
        "atosantimalware": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Deploy Antimalware agent on VM: true or false"
            }
        },
        "atosbackup": {
            "type": "string",
            "defaultValue": "no-backup",
            "metadata": {
                "description": "Backup policy where VM should be added. Recovery Vault and VM should be on the same subscription"
            }
        },
        "atospatchingschedule": {
            "type": "string",
            "defaultValue": "no-patching",
            "metadata": {
                "description": "Update management patching schedule where VM will be added"
            }
        }   
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "osversion": "[concat(parameters('osversion'),'-Datacenter')]",
        "vnetId": "[resourceId(parameters('networkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic0')]",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-pip')]",
        "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))]"
        },
        "ipConfig": [
            {
                "name": "ipconfig1",
                "properties": {
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    },
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": "[if(equals(parameters('deployPublicIpAddress'), 'True'),variables('publicIPAddress'), json('null'))]"
                }
            }
        ]
    },
    "resources": [
        {
            "condition": "[equals(parameters('deployPublicIpAddress'), 'True')]",
            "comments": "public ip address for virtual maschine",
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "network card for virtual maschine",
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": "[variables('ipConfig')]"
            }
        },
        {
            "comments": "Virtual Maschine",
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "tags": {
                "AtosManaged": "[parameters('atosmananged')]",               
                "AtosAntimalware": "[parameters('atosantimalware')]",
                "AtosBackup": "[parameters('atosbackup')]",
                "AtosPatching": "[parameters('atospatchingschedule')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('osversion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'-osdisk')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }

                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
        }          
    ],
    "outputs": {

    }
}
